<?php

namespace App\Model;

use App\Observers\Model\ZdPointObserver;
use Illuminate\Database\Eloquent\Model;

class ZdPoint extends Model
{
    const CREATED_AT = 'create_time';
    const UPDATED_AT = 'modify_time';
    public $timestamps = true;

    protected $table = "zd_point";

    protected $fillable = ['point_time_id', 'name', 'fixed_name', 'area', 'lng', 'lat', 'contacts', 'contact_way', 'remark', 'status'];


    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::observe(ZdPointObserver::class);
    }

    public function linePoint()
    {
        return $this->hasOne(ZdLinePoint::class, 'point_id', 'id');
    }

    public function pointTime()
    {
        return $this->belongsTo(ZdPointTime::class, 'point_time_id', 'id');
    }

    public function lines()
    {
        return $this->belongsTo(ZdLine::class, 'zd_line_point', 'point_id', 'line_id');
    }

    public function getLngAttributes($value)
    {
        return (float)$value;
    }

    public function getLatAttributes($value)
    {
        return (float)$value;
    }
    
    public function scopeLinePoint($query)
    {
        return $query->rightJoin('zd_line_point', 'zd_line_point.point_id', '=', 'zd_point.id');
    }
    
    public function scopeOrderWith($query)
    {
        return $query->orderBy('sort', 'ASC');
    }

}
